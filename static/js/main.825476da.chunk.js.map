{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Notification/Notification.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Notification/notify.module.css","components/Filter/transition/filter.module.css","components/ContactList/transition/slideContact.module.css","components/App/transition/showTitle.module.css","initial/initialContacts.js","components/redux/reducers/contacts.js","components/redux/store.js","components/Notification/Notification.jsx","components/ContactForm/ContactForm.jsx","components/redux/containers/AddCotact.js","components/redux/actions/actionsContacts.js","components/Filter/Filter.jsx","components/redux/containers/filterContacts.js","components/ContactList/ContactList.jsx","components/redux/containers/listContacts.js","components/App/App.jsx","components/redux/containers/getContactsFromLS.js","index.js"],"names":["module","exports","initialContacts","id","uuidv4","name","number","Type","combineReducers","contacts","state","type","payload","ADD_CONTACT","DELETE_CONTACT","CONTACTS_FROM_LS","filter","contact","value","FILTER_CONTACT","notify","isNotify","NOTIFICATION","rootReducer","phonebook","store","createStore","devToolsEnhancer","Notification","className","notifyText","ContactForm","inputName","inputNumber","addContact","toggleNotify","formAddContact","onSubmit","e","preventDefault","find","item","toLowerCase","isExistContact","Number","setTimeout","CSSTransition","in","timeout","unmountOnExit","classNames","notifyTransition","ref","node","inputForm","buttonAdd","connect","dispatch","bool","Filter","inputNodeFilter","handleFindName","length","filterTransition","sectionFilter","onChange","inputFilter","filterContacts","ContactList","onDeleteContact","TransitionGroup","component","list","includes","filteredContact","map","key","slideTransition","itemContact","btnDelete","onClick","deleteContact","App","showTitle","this","setState","addContacts","props","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","container","showTitleTransition","title","Component","contactsLS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.825476da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formAddContact\":\"ContactForm_formAddContact__MagQ0\",\"inputForm\":\"ContactForm_inputForm__1jDym\",\"buttonAdd\":\"ContactForm_buttonAdd__26j_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2WP4e\",\"itemContact\":\"ContactList_itemContact__1gza1\",\"btnDelete\":\"ContactList_btnDelete__3hluX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"Notification_notify__1FSGv\",\"notifyText\":\"Notification_notifyText__3EZgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionFilter\":\"Filter_sectionFilter__3WugB\",\"inputFilter\":\"Filter_inputFilter__3AA_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1WH6h\",\"title\":\"App_title__2CJ4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notify_enter__2lUrv\",\"enterActive\":\"notify_enterActive__3M6BG\",\"exit\":\"notify_exit__iBbAV\",\"exitActive\":\"notify_exitActive__1gul5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__1GMX8\",\"enterActive\":\"filter_enterActive__32dUv\",\"exit\":\"filter_exit__9p4Rx\",\"exitActive\":\"filter_exitActive__3m1LY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideContact_enter__1A-CJ\",\"enterActive\":\"slideContact_enterActive__fT7Ma\",\"exit\":\"slideContact_exit__2hdY6\",\"exitActive\":\"slideContact_exitActive__3ATNR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"showTitle_enter__1VbYy\",\"enterActive\":\"showTitle_enterActive__1JmU0\"};","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const initialContacts = [\r\n  { id: uuidv4(), name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: uuidv4(), name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: uuidv4(), name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: uuidv4(), name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport const Type = {\r\n  ADD_CONTACT: \"ADD_CONTACT\",\r\n  DELETE_CONTACT: \"DELETE_CONTACT\",\r\n  FILTER_CONTACT: \"FILTER_CONTACT\",\r\n  CONTACTS_FROM_LS: 'CONTACTS_FROM_LS',\r\n  NOTIFICATION: \"NOTIFICATION\",\r\n};\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { initialContacts, Type } from \"../../../initial/initialContacts\";\r\n\r\nconst contacts = (state = initialContacts, { type, payload, id, contacts }) => {\r\n  const { ADD_CONTACT, DELETE_CONTACT, CONTACTS_FROM_LS } = Type;\r\n  switch (type) {\r\n    case ADD_CONTACT:\r\n      return [\r\n        {\r\n          id,\r\n          name: payload.name,\r\n          number: payload.number,\r\n        },\r\n        ...state,\r\n      ];\r\n\r\n    case DELETE_CONTACT:\r\n      return state.filter((contact) => contact.id !== id);\r\n\r\n    case CONTACTS_FROM_LS:\r\n      return [...contacts];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, value }) => {\r\n  const { FILTER_CONTACT } = Type;\r\n  switch (type) {\r\n    case FILTER_CONTACT:\r\n      return value;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst notify = (state = false, { type, isNotify }) => {\r\n  const { NOTIFICATION } = Type;\r\n  switch (type) {\r\n    case NOTIFICATION:\r\n      return isNotify;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ contacts, filter, notify });\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport contacts from \"./reducers/contacts\";\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: contacts,\r\n});\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { notify,notifyText } from \"./Notification.module.css\";\r\n\r\nconst Notification = () => {\r\n  return (\r\n    <div className={notify}>\r\n      <p className={notifyText}>Contact already exists or incorrect data !</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport { formAddContact, buttonAdd, inputForm } from \"./ContactForm.module.css\";\r\nimport notifyTransition from \"../Notification/notify.module.css\";\r\n\r\nconst ContactForm = ({ contacts, isNotify, addContact, toggleNotify }) => {\r\n  let inputName;\r\n  let inputNumber;\r\n  const isExistContact = (contacts) => {\r\n    return contacts.find(\r\n      (item) => item.name.toLowerCase() === inputName.value.toLowerCase()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={formAddContact}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (\r\n          !isExistContact(contacts) &&\r\n          inputName.value &&\r\n          Number(inputNumber.value)\r\n        ) {\r\n          addContact(inputName.value, inputNumber.value);\r\n          inputName.value = \"\";\r\n          inputNumber.value = \"\";\r\n          return;\r\n        }\r\n        toggleNotify(true);\r\n        setTimeout(() => {\r\n          toggleNotify(false);\r\n        }, 1500);\r\n      }}\r\n    >\r\n      <CSSTransition\r\n        in={isNotify}\r\n        timeout={250}\r\n        unmountOnExit\r\n        classNames={notifyTransition}\r\n      >\r\n        <Notification />\r\n      </CSSTransition>\r\n\r\n      <label>\r\n        Name\r\n        <input\r\n          ref={(node) => (inputName = node)}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={inputForm}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          ref={(node) => (inputNumber = node)}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          className={inputForm}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={buttonAdd}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  isNotify: PropTypes.bool.isRequired,\r\n  addContact: PropTypes.func.isRequired,\r\n  toggleNotify: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import { connect } from \"react-redux\";\r\nimport ContactForm from \"../../ContactForm/ContactForm\";\r\nimport { addContact, notify } from \"../actions/actionsContacts\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.phonebook.contacts,\r\n  isNotify: state.phonebook.notify,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) => dispatch(addContact(name, number)),\r\n  toggleNotify: (bool) => dispatch(notify(bool)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { Type } from \"../../../initial/initialContacts\";\r\n\r\nexport const addContact = (name, number) => ({\r\n  type: Type.ADD_CONTACT,\r\n  id: uuidv4(),\r\n  payload: {\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nexport const deleteContact = (id) => ({\r\n  type: Type.DELETE_CONTACT,\r\n  id,\r\n});\r\n\r\nexport const notify = (isNotify) => ({\r\n  type: Type.NOTIFICATION,\r\n  isNotify,\r\n});\r\n\r\nexport const filterContacts = (value) => ({\r\n  type: Type.FILTER_CONTACT,\r\n  value,\r\n});\r\n\r\nexport const contactsLS = (contacts) => ({\r\n  type: Type.CONTACTS_FROM_LS,\r\n  contacts,\r\n});","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { sectionFilter, inputFilter } from \"./Filter.module.css\";\r\nimport filterTransition from \"./transition/filter.module.css\";\r\n\r\nconst Filter = ({ contacts, handleFindName }) => {\r\n  let inputNodeFilter;\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={contacts.length >= 2}\r\n      timeout={250}\r\n      unmountOnExit\r\n      classNames={filterTransition}\r\n    >\r\n      <section className={sectionFilter}>\r\n        <label>\r\n          Find contacts by name\r\n          <input\r\n            ref={(node) => (inputNodeFilter = node)}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            onChange={() => handleFindName(inputNodeFilter.value)}\r\n            className={inputFilter}\r\n          />\r\n        </label>\r\n      </section>\r\n    </CSSTransition>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\r\n  handleFindName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../actions/actionsContacts\";\r\nimport Filter from \"../../Filter/Filter\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.phonebook.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleFindName: (value) => dispatch(filterContacts(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport { list, itemContact, btnDelete } from \"./ContactList.module.css\";\r\nimport slideTransition from \"./transition/slideContact.module.css\";\r\n\r\nconst ContactList = ({ contacts, filter, onDeleteContact }) => {\r\n  const filteredContact = (name, contacts) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={list}>\r\n      {filteredContact(filter, contacts).map(({ name, number, id }) => (\r\n        <CSSTransition\r\n          key={id}\r\n          timeout={200}\r\n          unmountOnExit\r\n          classNames={slideTransition}\r\n        >\r\n          <li className={itemContact}>\r\n            <p>\r\n              {name}: <span>{number}</span>\r\n            </p>\r\n            <button\r\n              className={btnDelete}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            ></button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../actions/actionsContacts\";\r\nimport ContactList from \"../../ContactList/ContactList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.phonebook.contacts,\r\n  filter: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n// Components\r\nimport ContactForm from \"../redux/containers/AddCotact\";\r\nimport Filter from \"../redux/containers/filterContacts\";\r\nimport ContactList from \"../redux/containers/listContacts\";\r\n\r\n// Styles\r\nimport { container, title } from \"./App.module.css\";\r\nimport showTitleTransition from \"./transition/showTitle.module.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    showTitle: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ showTitle: true });\r\n    const { addContacts } = this.props;\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n    if (persistedContacts) {\r\n      const contacts = JSON.parse(persistedContacts);\r\n      addContacts(contacts);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { contacts } = this.props;\r\n    if (prevProps.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showTitle } = this.state;\r\n    return (\r\n      <section className={container}>\r\n        <CSSTransition\r\n          in={showTitle}\r\n          timeout={500}\r\n          unmountOnExit\r\n          classNames={showTitleTransition}\r\n        >\r\n          <h1 className={title}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport App from \"../../App/App\";\r\nimport { contactsLS } from \"../actions/actionsContacts\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.phonebook.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContacts: (contacts) => dispatch(contactsLS(contacts)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./components/redux/store\";\r\nimport App from \"./components/redux/containers/getContactsFromLS\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}